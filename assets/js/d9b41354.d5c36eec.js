"use strict";(self.webpackChunktimistudio_docs=self.webpackChunktimistudio_docs||[]).push([[5274],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5906:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={},s="1. Install docker (OK)",c={unversionedId:"monsy/setup_api_server",id:"monsy/setup_api_server",title:"1. Install docker (OK)",description:"Follow offical docs",source:"@site/docs/monsy/setup_api_server.md",sourceDirName:"monsy",slug:"/monsy/setup_api_server",permalink:"/docs/monsy/setup_api_server",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Monsy (Expo)",permalink:"/docs/monsy/expo-version"},next:{title:"Introduction",permalink:"/docs/petlove/introduction"}},p=[],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"1-install-docker-ok"},"1. Install docker (OK)"),(0,i.kt)("p",null,"Follow offical docs"),(0,i.kt)("p",null,"TODO: Dung"),(0,i.kt)("h1",{id:"2-install-docker-compose-ok"},"2. Install docker-compose (OK)"),(0,i.kt)("p",null,"Follow offical docs"),(0,i.kt)("p",null,"TODO: Dung"),(0,i.kt)("h1",{id:"3-install-nginx-ok"},"3. Install nginx (OK)"),(0,i.kt)("p",null,"Follow offical docs"),(0,i.kt)("p",null,"TODO: Dung"),(0,i.kt)("h1",{id:"4-setup-nginx"},"4. Setup nginx"),(0,i.kt)("p",null,"Make a reverse proxy to redirect request to NodeJS Server (Docker)"),(0,i.kt)("p",null,"Edit file ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/nginx/sites-available/default")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"server {\n    root /var/www/html;\n\n    index index.html index.htm index.nginx-debian.html;\n    server_name demo-api.timistudio.dev;\n\n  # Reverse proxy\n  location / {\n    proxy_pass http://localhost:3000;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Host $host;\n    proxy_cache_bypass $http_upgrade;\n  }\n}\n")),(0,i.kt)("h1",{id:"5-run-docker"},"5. Run docker"),(0,i.kt)("p",null,"TODO: Dung"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker-compose up -d\n")),(0,i.kt)("h1",{id:"6-point-domain"},"6. Point domain"),(0,i.kt)("p",null,"Get global ip, in our vps, it is ",(0,i.kt)("inlineCode",{parentName:"p"},"178.128.119.80")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000\n    link/ether 7e:8b:c2:e5:07:e2 brd ff:ff:ff:ff:ff:ff\n    inet 178.128.119.80/20 brd 178.128.127.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet 10.15.0.6/16 brd 10.15.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::7c8b:c2ff:fee5:7e2/64 scope link\n       valid_lft forever preferred_lft forever\n")),(0,i.kt)("p",null,"Create A record point to your global IP. Below is sample we point subdomain ",(0,i.kt)("inlineCode",{parentName:"p"},"demo-api")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"178.128.119.80")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47516405/158398396-c2b614bb-90f0-4aca-8ae6-8077b8cc8021.png",alt:"image"})),(0,i.kt)("h1",{id:"7-domain-for-setup-ssl"},"7. Domain for setup ssl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo apt install certbot python3-certbot-nginx\n\n$ sudo systemctl reload nginx\n\n$ sudo certbot --nginx -d demo-api.timistudio.dev\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator nginx, Installer nginx\nEnter email address (used for urgent renewal and security notices) (Enter 'c' to\ncancel): minhdq@timistudio.dev\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nPlease read the Terms of Service at\nhttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\nagree in order to register with the ACME server at\nhttps://acme-v02.api.letsencrypt.org/directory\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(A)gree/(C)ancel: A\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nWould you be willing to share your email address with the Electronic Frontier\nFoundation, a founding partner of the Let's Encrypt project and the non-profit\norganization that develops Certbot? We'd like to send you email about our work\nencrypting the web, EFF news, campaigns, and ways to support digital freedom.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(Y)es/(N)o: A\n(Y)es/(N)o: A\n(Y)es/(N)o: Y\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for demo-api.timistudio.dev\nWaiting for verification...\nCleaning up challenges\nDeploying Certificate to VirtualHost /etc/nginx/sites-enabled/default\n\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel): 2\nRedirecting all traffic on port 80 to ssl in /etc/nginx/sites-enabled/default\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nCongratulations! You have successfully enabled https://demo-api.timistudio.dev\n\nYou should test your configuration at:\nhttps://www.ssllabs.com/ssltest/analyze.html?d=demo-api.timistudio.dev\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/demo-api.timistudio.dev/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/demo-api.timistudio.dev/privkey.pem\n   Your cert will expire on 2022-06-13. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot again\n   with the \"certonly\" option. To non-interactively renew *all* of\n   your certificates, run \"certbot renew\"\n - Your account credentials have been saved in your Certbot\n   configuration directory at /etc/letsencrypt. You should make a\n   secure backup of this folder now. This configuration directory will\n   also contain certificates and private keys obtained by Certbot so\n   making regular backups of this folder is ideal.\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n")))}d.isMDXComponent=!0}}]);